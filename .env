# .env.example - TradeWeaver Advanced AI System
# Copy to .env for local development and fill in your actual values.
# For GCP Cloud Function deployments, set these as environment variables in the GCP console/CLI.

# --- GCP Configuration ---
GCP_PROJECT_ID="your-gcp-project-id" # Replace with your Google Cloud Project ID

# --- Kite Connect API Keys ---
# Store these securely. For GCP, use Secret Manager.
KITE_API_KEY="your_kite_api_key"
KITE_API_SECRET="your_kite_api_secret"
# KITE_ACCESS_TOKEN is dynamic (expires daily). 
# For local dev, generate it and paste here. For production, implement a robust refresh mechanism.
KITE_ACCESS_TOKEN="" 

# --- News API Key (e.g., from NewsAPI.org) ---
NEWS_API_KEY="your_newsapi_org_key"

# --- Google Gemini API Key ---
# Store securely. For GCP, consider service account auth with Vertex AI if not using direct genai SDK with key.
# If using genai SDK directly, this key is needed.
GEMINI_API_KEY="your_google_ai_studio_gemini_api_key"


# --- Pub/Sub Topic Names (Customize as needed) ---
PUBSUB_MARKET_TICKS_TOPIC="tradeveaver-market-ticks-v4"
PUBSUB_INSTRUMENT_SELECTION_TOPIC="tradeveaver-instrument-selection-v4"
PUBSUB_STRATEGY_SIGNALS_TOPIC="tradeveaver-strategy-signals-v4" # Main AI Agent subscribes here
PUBSUB_NEWS_SENTIMENT_TOPIC="tradeveaver-news-sentiment-v4" # Market Selector & Main AI Agent might subscribe
PUBSUB_KITE_TICKER_CONTROL_TOPIC="tradeveaver-kite-ticker-control-v4" # For Market Selector to control Ticker Service subscriptions
PUBSUB_KITE_TICKER_CONTROL_SUB="tradeveaver-kite-ticker-control-v4-sub" # Subscription name for the Ticker Service

# --- Firestore Collection Names (Customize as needed) ---
FS_COLLECTION_AGENT_CONFIG="tradeveaver_agent_configs_v4_ai"
FS_COLLECTION_ACTIVE_TRADES="tradeveaver_active_trades_v4_ai"
FS_COLLECTION_TRADE_HISTORY="tradeveaver_trade_history_v4_ai"
FS_DOC_ID_MAIN_AGENT_CONFIG="main_agent_settings_v4_ai" # Document ID for Main AI Agent's config

# --- AI Agent Model Configuration (Can also be in Firestore) ---
# These are defaults if not found in Firestore config for specific agents
AI_STRATEGY_DEFAULT_MODEL="gemini-1.5-pro-latest"
MAIN_AI_DECISION_MODEL="gemini-1.5-pro-latest"
# Specific agent parameters (can be overridden by Firestore config)
RSI_AI_PERIOD="14"
MACD_AI_FAST="12"
MACD_AI_SLOW="26"
MACD_AI_SIGNAL="9"
EMA_AI_SHORT="9"
EMA_AI_LONG="21"
BOLLINGER_AI_LENGTH="20"
BOLLINGER_AI_STDDEV="2.0"
TREND_AI_ADX_LENGTH="14"
CHART_AI_CANDLE_HISTORY="60"


# --- Main AI Agent Trading Parameters (Defaults, can be overridden by Firestore) ---
MAIN_AI_PROFIT_TARGET_PCT="0.10"  # 10% on capital deployed
MAIN_AI_STOP_LOSS_RISK_PCT="0.20" # 20% risk on capital deployed
MAIN_AI_CAPITAL_ALLOC_PCT="0.10"  # 10% of total available capital
MAIN_AI_MAX_SUCCESSFUL_TRADES_PER_DAY="5"
MAIN_AI_SQUARE_OFF_HOUR_IST="15"
MAIN_AI_SQUARE_OFF_MINUTE_IST="10" # e.g. 3:10 PM IST
MAIN_AI_MIN_CONFIDENCE_FOR_TRADE_ENTRY="0.65"
MAIN_AI_MIN_CONFIDENCE_FOR_EARLY_EXIT="0.75"


# --- Backtesting Configuration (Examples for local run_ai_backtest.py) ---
BT_HISTORICAL_DATA_OUTPUT_DIR="tradeveaver_historical_data" # Where fetcher saves CSVs
BT_DEFAULT_DATA_FILE="tradeveaver_historical_data/NIFTY_50_minute_YYYY-MM-DD_to_YYYY-MM-DD.csv" # Example path
BT_AI_MODE="mock_prefer" # "mock_only", "mock_prefer", "live_only"
BT_INITIAL_CAPITAL="1000000.0" # For backtesting portfolio

# --- Logging Level ---
LOG_LEVEL="INFO" # DEBUG, INFO, WARNING, ERROR, CRITICAL
